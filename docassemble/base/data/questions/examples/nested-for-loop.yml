metadata:
  title: Nested for loops
  example start: 14
  example end: 14
  documentation: "http://docassemble.org/docs/groups.html"
---
modules:
  - docassemble.base.core
  - docassemble.base.legal
---
objects:
  - person: PartyList
---
code: |
  person.gathered = person.gather()
---
generic object: Individual
code: |
  x.child.gathered = x.child.gather(minimum=0)
---
generic object: Individual
sets: x.allergy
code: |
  x.initializeAttribute('allergy', DAList)
---
generic object: Individual
code: |
  x.allergy.gathered = x.allergy.gather(minimum=0)
---
question: |
  % if person.number():
  Is there another person?
  % else:
  Is there a person?
  % endif
yesno: person.there_is_another
---
generic object: Individual
question: |
  % if x.child.number():
  Does ${ x } have any children other than ${ x.child }?
  % else:
  Does ${ x } have any children?
  % endif
yesno: x.child.there_is_another
---
generic object: Individual
question: |
  % if x.allergy.number():
  Does ${ x } have any allergies other than ${ x.allergy }?
  % else:
  Does ${ x } have any allergies?
  % endif
yesno: x.allergy.there_is_another
---
question: |
  What is the name of the ${ ordinal(i) } person?
fields:
  - First: person[i].name.first
  - Last: person[i].name.first
---
generic object: Individual
question: |
  What is the name of ${ x.possessive(ordinal(i) + ' child') }?
fields:
  - First: x.child[i].name.first
  - Last: x.child[i].name.first
---
generic object: Individual
question: |
  What allergy does ${ x } have?
fields:
  - Allergy: x.allergy[i]
---
sets: all_done
question: Information retrieved
buttons:
  - Restart: restart
---
mandatory: true
code: |
  for the_person in person:
      need(the_person.name.first)
      for the_child in the_person.child:
          need(the_child.name.first)
          for allergy in the_child.allergy:
              need(allergy)
          need(the_child.allergy.gathered)
      need(the_person.child.gathered)
  need(person.gathered)
  need(all_done)